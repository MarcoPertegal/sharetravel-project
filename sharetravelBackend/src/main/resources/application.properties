# Le indicamos a JPA/Hibernate que se encargue de generar el DDL
spring.jpa.hibernate.ddl-auto=create-drop

# Habilitamos los mensajes sql en el log
spring.jpa.show-sql=true


jwt.secret=otEz3_NK_7-P9C3aGPmTLbHVjDppgI1-vag28lfO8B4vLxBVhHOMS6-IatgGRH8LCs91bswGaEb8EzvJWYW_RQ

#MODIFICAR ESTO PONERLO A MENOS Y GESTIONAR LOS TOKENS DE REFRESCO SABER COMO HACERLO
jwt.duration=100
jwt.refresh.duration=100

server.error.include-message=always
server.error.include-binding-errors=always


#######
server.error.include-exception=true
server.error.include-stacktrace=always

spring.jpa.properties.hibernate.format_sql=true

springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

loggin.level.org.springframework.security=TRACE


#SIN DOCKER con h2
# Usuario y contrasena de la base de datos
#spring.datasource.username=sa
#spring.datasource.password=
# URL jdbc de conexion a la base de datos
#spring.datasource.url=jdbc:h2:./db/database
# Habilitamos la consola de H2
# http://localhost:{server.port}/h2-console
#spring.h2.console.enabled=true


#PARA EL DOCKER con postgres
spring.jpa.open-in-view=false
spring.profiles.active=prod
spring.datasource.username=postgres
spring.datasource.password=12345678
